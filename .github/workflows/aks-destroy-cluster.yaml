name: 'AKS modified cluster'
on:
  push:
    tags:
      - 'aks-cluster-destroy*'
  pull_request:
    tags:
      - 'aks-cluster-destroy*'

jobs:
  modify-cluster:
    runs-on: ubuntu-latest
    env:
        working-directory: ./azure-aks/
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    defaults:
      run:
        working-directory: ${{env.working-directory}}
    steps:
      # Checkout code
    - uses: actions/checkout@master
      name: Git checkout code

    - name: AKS readiness verify
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.8
      id: destroy
      run: terraform destroy --auto-approve
      continue-on-error: true

    - name: Rollback all Propertie KUBECONFIG
      run: | 
        # Cleanup KUBECONFIG
        touch > aks-config
        cp 00_provider-template.tf 00_provider.tf
        cp terraform-template.tfvars terraform.tfvars

    - uses: actions-js/push@master
      name: Commit and push result back
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        message: "Commit for update result create environment"